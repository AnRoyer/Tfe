Group{
	Omega_0 = Region[{13}];
	Omega_6 = Region[{12}];
	Omega_4 = Region[{11}];
	Omega_8 = Region[{10}];
	Omega_2 = Region[{9}];
	Omega_1 = Region[{8}];
	Omega_3 = Region[{7}];
	Omega_9 = Region[{6}];
	Omega_5 = Region[{5}];
	Omega_7 = Region[{4}];


	Sigma_1_5 = Region[{25}];
	Sigma_5_1 = Region[{25}];
	BndSigma_1_5 = Region[{40}];
	BndSigma_5_1 = Region[{40}];
	BndGammaInf_1_5 = Region[{}];
	BndGammaInf_5_1 = Region[{}];
	BndGammaD_1_5 = Region[{}];
	BndGammaD_5_1 = Region[{}];
	BndGammaInf_1 = Region[{}];
	BndGammaInf_5 = Region[{}];
	BndGammaD_1 = Region[{}];
	BndGammaD_5 = Region[{}];
	Sigma_1_6 = Region[{31}];
	Sigma_6_1 = Region[{31}];
	BndSigma_1_6 = Region[{40}];
	BndSigma_6_1 = Region[{40}];
	BndGammaInf_1_6 = Region[{}];
	BndGammaInf_6_1 = Region[{}];
	BndGammaD_1_6 = Region[{}];
	BndGammaD_6_1 = Region[{}];
	BndGammaInf_1 = Region[{}];
	BndGammaInf_6 = Region[{}];
	BndGammaD_1 = Region[{}];
	BndGammaD_6 = Region[{}];
	Sigma_1_4 = Region[{32}];
	Sigma_4_1 = Region[{32}];
	BndSigma_1_4 = Region[{34}];
	BndSigma_4_1 = Region[{34}];
	BndGammaInf_1_4 = Region[{}];
	BndGammaInf_4_1 = Region[{}];
	BndGammaD_1_4 = Region[{}];
	BndGammaD_4_1 = Region[{}];
	BndGammaInf_1 = Region[{}];
	BndGammaInf_4 = Region[{}];
	BndGammaD_1 = Region[{}];
	BndGammaD_4 = Region[{}];
	Sigma_1_0 = Region[{26}];
	Sigma_0_1 = Region[{26}];
	BndSigma_1_0 = Region[{34}];
	BndSigma_0_1 = Region[{34}];
	BndGammaInf_1_0 = Region[{}];
	BndGammaInf_0_1 = Region[{}];
	BndGammaD_1_0 = Region[{}];
	BndGammaD_0_1 = Region[{}];
	BndGammaInf_1 = Region[{}];
	BndGammaInf_0 = Region[{}];
	BndGammaD_1 = Region[{}];
	BndGammaD_0 = Region[{}];
	Sigma_8_7 = Region[{23}];
	Sigma_7_8 = Region[{23}];
	BndSigma_8_7 = Region[{41}];
	BndSigma_7_8 = Region[{41}];
	BndGammaInf_8_7 = Region[{}];
	BndGammaInf_7_8 = Region[{}];
	BndGammaD_8_7 = Region[{}];
	BndGammaD_7_8 = Region[{}];
	BndGammaInf_8 = Region[{}];
	BndGammaInf_7 = Region[{}];
	BndGammaD_8 = Region[{}];
	BndGammaD_7 = Region[{}];
	Sigma_8_3 = Region[{22}];
	Sigma_3_8 = Region[{22}];
	BndSigma_8_3 = Region[{33}];
	BndSigma_3_8 = Region[{33}];
	BndGammaInf_8_3 = Region[{}];
	BndGammaInf_3_8 = Region[{}];
	BndGammaD_8_3 = Region[{}];
	BndGammaD_3_8 = Region[{}];
	BndGammaInf_8 = Region[{}];
	BndGammaInf_3 = Region[{}];
	BndGammaD_8 = Region[{}];
	BndGammaD_3 = Region[{}];
	Sigma_8_9 = Region[{21}];
	Sigma_9_8 = Region[{21}];
	BndSigma_8_9 = Region[{33, 41}];
	BndSigma_9_8 = Region[{33, 41}];
	BndGammaInf_8_9 = Region[{}];
	BndGammaInf_9_8 = Region[{}];
	BndGammaD_8_9 = Region[{}];
	BndGammaD_9_8 = Region[{}];
	BndGammaInf_8 = Region[{}];
	BndGammaInf_9 = Region[{}];
	BndGammaD_8 = Region[{}];
	BndGammaD_9 = Region[{}];
	Sigma_2_3 = Region[{28}];
	Sigma_3_2 = Region[{28}];
	BndSigma_2_3 = Region[{37}];
	BndSigma_3_2 = Region[{37}];
	BndGammaInf_2_3 = Region[{}];
	BndGammaInf_3_2 = Region[{}];
	BndGammaD_2_3 = Region[{}];
	BndGammaD_3_2 = Region[{}];
	BndGammaInf_2 = Region[{}];
	BndGammaInf_3 = Region[{}];
	BndGammaD_2 = Region[{}];
	BndGammaD_3 = Region[{}];
	Sigma_2_4 = Region[{19}];
	Sigma_4_2 = Region[{19}];
	BndSigma_2_4 = Region[{37, 38}];
	BndSigma_4_2 = Region[{37, 38}];
	BndGammaInf_2_4 = Region[{}];
	BndGammaInf_4_2 = Region[{}];
	BndGammaD_2_4 = Region[{}];
	BndGammaD_4_2 = Region[{}];
	BndGammaInf_2 = Region[{}];
	BndGammaInf_4 = Region[{}];
	BndGammaD_2 = Region[{}];
	BndGammaD_4 = Region[{}];
	Sigma_2_0 = Region[{27}];
	Sigma_0_2 = Region[{27}];
	BndSigma_2_0 = Region[{38}];
	BndSigma_0_2 = Region[{38}];
	BndGammaInf_2_0 = Region[{}];
	BndGammaInf_0_2 = Region[{}];
	BndGammaD_2_0 = Region[{}];
	BndGammaD_0_2 = Region[{}];
	BndGammaInf_2 = Region[{}];
	BndGammaInf_0 = Region[{}];
	BndGammaD_2 = Region[{}];
	BndGammaD_0 = Region[{}];
	Sigma_5_7 = Region[{24}];
	Sigma_7_5 = Region[{24}];
	BndSigma_5_7 = Region[{36}];
	BndSigma_7_5 = Region[{36}];
	BndGammaInf_5_7 = Region[{}];
	BndGammaInf_7_5 = Region[{}];
	BndGammaD_5_7 = Region[{}];
	BndGammaD_7_5 = Region[{}];
	BndGammaInf_5 = Region[{}];
	BndGammaInf_7 = Region[{}];
	BndGammaD_5 = Region[{}];
	BndGammaD_7 = Region[{}];
	Sigma_5_6 = Region[{18}];
	Sigma_6_5 = Region[{18}];
	BndSigma_5_6 = Region[{36, 40}];
	BndSigma_6_5 = Region[{36, 40}];
	BndGammaInf_5_6 = Region[{}];
	BndGammaInf_6_5 = Region[{}];
	BndGammaD_5_6 = Region[{}];
	BndGammaD_6_5 = Region[{}];
	BndGammaInf_5 = Region[{}];
	BndGammaInf_6 = Region[{}];
	BndGammaD_5 = Region[{}];
	BndGammaD_6 = Region[{}];
	Sigma_7_6 = Region[{16}];
	Sigma_6_7 = Region[{16}];
	BndSigma_7_6 = Region[{35, 36}];
	BndSigma_6_7 = Region[{35, 36}];
	BndGammaInf_7_6 = Region[{}];
	BndGammaInf_6_7 = Region[{}];
	BndGammaD_7_6 = Region[{}];
	BndGammaD_6_7 = Region[{}];
	BndGammaInf_7 = Region[{}];
	BndGammaInf_6 = Region[{}];
	BndGammaD_7 = Region[{}];
	BndGammaD_6 = Region[{}];
	Sigma_7_9 = Region[{17}];
	Sigma_9_7 = Region[{17}];
	BndSigma_7_9 = Region[{35, 41}];
	BndSigma_9_7 = Region[{35, 41}];
	BndGammaInf_7_9 = Region[{}];
	BndGammaInf_9_7 = Region[{}];
	BndGammaD_7_9 = Region[{}];
	BndGammaD_9_7 = Region[{}];
	BndGammaInf_7 = Region[{}];
	BndGammaInf_9 = Region[{}];
	BndGammaD_7 = Region[{}];
	BndGammaD_9 = Region[{}];
	Sigma_6_9 = Region[{30}];
	Sigma_9_6 = Region[{30}];
	BndSigma_6_9 = Region[{35}];
	BndSigma_9_6 = Region[{35}];
	BndGammaInf_6_9 = Region[{}];
	BndGammaInf_9_6 = Region[{}];
	BndGammaD_6_9 = Region[{}];
	BndGammaD_9_6 = Region[{}];
	BndGammaInf_6 = Region[{}];
	BndGammaInf_9 = Region[{}];
	BndGammaD_6 = Region[{}];
	BndGammaD_9 = Region[{}];
	Sigma_3_9 = Region[{15}];
	Sigma_9_3 = Region[{15}];
	BndSigma_3_9 = Region[{33, 39}];
	BndSigma_9_3 = Region[{33, 39}];
	BndGammaInf_3_9 = Region[{}];
	BndGammaInf_9_3 = Region[{}];
	BndGammaD_3_9 = Region[{}];
	BndGammaD_9_3 = Region[{}];
	BndGammaInf_3 = Region[{}];
	BndGammaInf_9 = Region[{}];
	BndGammaD_3 = Region[{}];
	BndGammaD_9 = Region[{}];
	Sigma_3_4 = Region[{20}];
	Sigma_4_3 = Region[{20}];
	BndSigma_3_4 = Region[{37, 39}];
	BndSigma_4_3 = Region[{37, 39}];
	BndGammaInf_3_4 = Region[{}];
	BndGammaInf_4_3 = Region[{}];
	BndGammaD_3_4 = Region[{}];
	BndGammaD_4_3 = Region[{}];
	BndGammaInf_3 = Region[{}];
	BndGammaInf_4 = Region[{}];
	BndGammaD_3 = Region[{}];
	BndGammaD_4 = Region[{}];
	Sigma_9_4 = Region[{29}];
	Sigma_4_9 = Region[{29}];
	BndSigma_9_4 = Region[{39}];
	BndSigma_4_9 = Region[{39}];
	BndGammaInf_9_4 = Region[{}];
	BndGammaInf_4_9 = Region[{}];
	BndGammaD_9_4 = Region[{}];
	BndGammaD_4_9 = Region[{}];
	BndGammaInf_9 = Region[{}];
	BndGammaInf_4 = Region[{}];
	BndGammaD_9 = Region[{}];
	BndGammaD_4 = Region[{}];
	Sigma_4_0 = Region[{14}];
	Sigma_0_4 = Region[{14}];
	BndSigma_4_0 = Region[{34, 38}];
	BndSigma_0_4 = Region[{34, 38}];
	BndGammaInf_4_0 = Region[{}];
	BndGammaInf_0_4 = Region[{}];
	BndGammaD_4_0 = Region[{}];
	BndGammaD_0_4 = Region[{}];
	BndGammaInf_4 = Region[{}];
	BndGammaInf_0 = Region[{}];
	BndGammaD_4 = Region[{}];
	BndGammaD_0 = Region[{}];

	Sigma_1 = Region[{25, 26, 31, 32}];
	Sigma_8 = Region[{21, 22, 23}];
	Sigma_2 = Region[{19, 27, 28}];
	Sigma_5 = Region[{18, 24, 25}];
	Sigma_7 = Region[{16, 17, 23, 24}];
	Sigma_6 = Region[{16, 18, 30, 31}];
	Sigma_3 = Region[{15, 20, 22, 28}];
	Sigma_9 = Region[{15, 17, 21, 29, 30}];
	Sigma_4 = Region[{14, 19, 20, 29, 32}];
	Sigma_0 = Region[{14, 26, 27}];

	BndSigma_2 = Region[{37, 38}];
	BndSigma_5 = Region[{36, 40}];
	BndSigma_7 = Region[{35, 36, 41}];
	BndSigma_6 = Region[{35, 36, 40}];
	BndSigma_4 = Region[{34, 37, 38, 39}];
	BndSigma_1 = Region[{34, 40}];
	BndSigma_0 = Region[{34, 38}];
	BndSigma_9 = Region[{33, 35, 39, 41}];
	BndSigma_8 = Region[{33, 41}];
	BndSigma_3 = Region[{33, 37, 39}];


	D() = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
	N_DOM = #D();
	D_2 = {3, 4, 0};
	D_9 = {8, 7, 6, 3, 4};
	D_3 = {8, 2, 9, 4};
	D_7 = {8, 5, 6, 9};
	D_8 = {7, 3, 9};
	D_4 = {1, 2, 3, 9, 0};
	D_0 = {1, 2, 4};
	D_5 = {1, 7, 6};
	D_6 = {1, 5, 7, 9};
	D_1 = {5, 6, 4, 0};
}


Function {
	myD = {} ; // the domains that I'm in charge of
	myD_0 = {};
	myD_1 = {};
	myD_2 = {};
	myD_3 = {};
	myD_4 = {};
	myD_5 = {};
	myD_6 = {};
	myD_7 = {};
	myD_8 = {};
	myD_9 = {};
	ListOfFields = {};
	ListOfConnectedFields = {};

	For idom In {0:N_DOM-1}
		If (idom % MPI_Size == MPI_Rank)
			myD() += idom;
			myD~{idom} += D~{idom}();
		EndIf
	EndFor
	For ii In {0:#myD()-1}
		i = myD(ii);
		If(#myD~{i}() == 2)
			Printf("We can do sweeping!");
		EndIf
		For jj In {0:#myD~{i}()-1}
			j = myD~{i}(jj);
			If (#myD~{i}() == 1)
				tag_g~{i}~{j} = D(i) * 1000 + D~{i};
			Else
				tag_g~{i}~{j} = D(i) * 1000 + D~{i}(jj);
			EndIf
			ListOfFields() += tag_g~{i}~{j};
			If(ANALYSIS == 0)
				g_in~{i}~{j}[ Sigma~{i}~{j} ] = ComplexScalarField[XYZ[]]{ tag_g~{i}~{j} };
			EndIf
			If(ANALYSIS == 1)
				g_in~{i}~{j}[ Sigma~{i}~{j} ] = ComplexVectorField[XYZ[]]{ tag_g~{i}~{j} };
			EndIf
		EndFor
	EndFor
}
